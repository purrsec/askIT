# .github/workflows/release.yml

name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*.*.*' # Déclenche le workflow quand un tag comme v1.0.0 est poussé

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Requis pour créer la Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }} # Rend l'URL de la release disponible pour les autres jobs

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-binaries:
    name: Build binary for ${{ matrix.os }}
    needs: build-and-release # Dépend du job qui crée la release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # Requis pour téléverser les fichiers (assets)
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_path: dist/askit-cli
            asset_name: askit-cli-linux
          - os: macos-latest
            asset_path: dist/askit-cli
            asset_name: askit-cli-macos
          - os: windows-latest
            asset_path: dist/askit-cli.exe
            asset_name: askit-cli-windows.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: poetry install

      - name: Build with PyInstaller
        run: poetry run pyinstaller src/askit/cli.py --name askit-cli --onefile --clean

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-and-release.outputs.upload_url }}
          asset_path: ${{ matrix.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream 